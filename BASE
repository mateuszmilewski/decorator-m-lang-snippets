let
    Source = PCV_SRC,
    #"Renamed Columns" = Table.RenameColumns(Source,{{"Cod. P/N", "REFERENCE"}, {"Desc. P/N", "PART NAME"}, {"Cod. Fornitore", "SELLER ID"}, {"Fornitore", "SELLER NAME"}, {"Desc. Luogo di Presa", "COMPLETE SHIPPER ADDRESS"}, {"Cod. Carrier", "CARRIER ID"}, {"ST_COST_CENTER.PLANT_CODE", "PLT"}, {"Cod. MDR", "STD PACK ID"}, {"P/N per MDR", "STD PACK QTY"}, {"FDC", "CODE TRANSPORT"}}),
    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns",{"filename", "Data", "Delins+A8", "MRP", "Molo di Scarico", "Spedizioniere", "Luogo di Presa", "JIT Supply Type", "Flag Multiforn.", "Lastr/Vern", "Avviamento", "Flag Overseas", "Overseas Flag P/N", "PLT", "Qta MDR", "reference Date", "dateMatrix.DATE1", "dateMatrix.DATE2", "isInTimeRangeScope", "L2_TXT"}),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Removed Columns", "SELLER NAME", Splitter.SplitTextByEachDelimiter({"- "}, QuoteStyle.Csv, false), {"SELLER NAME.1", "SELLER NAME.2"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Split Column by Delimiter",{"SELLER NAME.1"}),
    #"seller name 2 seller name" = Table.RenameColumns(#"Removed Columns1",{{"SELLER NAME.2", "SELLER NAME"}}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"seller name 2 seller name", "Transit Time", Splitter.SplitTextByEachDelimiter({" / "}, QuoteStyle.Csv, false), {"Transit Time.1", "Transit Time.2"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Split Column by Delimiter1",{{"Transit Time.2", "TT_AxA"}}),
    #"Merged Queries" = Table.NestedJoin(#"Renamed Columns1", {"Transit Time.1"}, TT_TABLE, {"TT xF"}, "TT_TABLE", JoinKind.LeftOuter),
    #"Expanded TT_TABLE" = Table.ExpandTableColumn(#"Merged Queries", "TT_TABLE", {"TT"}, {"TT"}),
    #"Merged Queries1" = Table.NestedJoin(#"Expanded TT_TABLE", {"TT_AxA"}, TT_TABLE, {"TT xF"}, "TT_TABLE", JoinKind.LeftOuter),
    #"Expanded TT_TABLE1" = Table.ExpandTableColumn(#"Merged Queries1", "TT_TABLE", {"TT"}, {"TT.1"}),
    #"Added Conditional Column" = Table.AddColumn(#"Expanded TT_TABLE1", "TT_FINAL", each if [TT] = null then [TT.1] else if [TT.1] = null then [TT] else 0),
    #"Removed Columns2" = Table.RemoveColumns(#"Added Conditional Column",{"Transit Time.1", "TT_AxA", "TT", "TT.1"}),
    #"Renamed Columns2" = Table.RenameColumns(#"Removed Columns2",{{"TT_FINAL", "DECALAGE EF"}}),
    #"Merged Queries2" = Table.NestedJoin(#"Renamed Columns2", {"CODE TRANSPORT"}, DCODES, {"CODE xF"}, "DCODES", JoinKind.LeftOuter),
    #"Expanded DCODES" = Table.ExpandTableColumn(#"Merged Queries2", "DCODES", {"CODE"}, {"CODE"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded DCODES", each true),
    #"Removed Columns3" = Table.RemoveColumns(#"Filtered Rows",{"CODE TRANSPORT"}),
    #"Added Custom SHIPPER ID" = Table.AddColumn(#"Removed Columns3", "SHIPPER ID", each [SELLER ID]),
    #"Duplicated Column" = Table.DuplicateColumn(#"Added Custom SHIPPER ID", "SHIPPER ID", "SHIPPER ID - Copy"),
    #"Renamed Columns3" = Table.RenameColumns(#"Duplicated Column",{{"SHIPPER ID - Copy", "HYBRID ID"}}),
    #"Added incoterm" = Table.AddColumn(#"Renamed Columns3", "Incoterm", each ""),
    #"Added tdp" = Table.AddColumn(#"Added incoterm", "TYPE DE PIÈCE", each ""),
    #"added w" = Table.AddColumn(#"Added tdp", "WEIGHT", each ""),
    #"added l" = Table.AddColumn(#"added w", "LENGTH", each ""),
    #"added wi" = Table.AddColumn(#"added l", "WIDTH", each ""),
    #"added h" = Table.AddColumn(#"added wi", "HEIGHT", each ""),
    #"added vol" = Table.AddColumn(#"added h", "VOLUME", each ""),
    #"added haz" = Table.AddColumn(#"added vol", "HAZARDOUS", each ""),
    #"added stackable" = Table.AddColumn(#"added haz", "STACKABLE", each ""),
    #"added altid" = Table.AddColumn(#"added stackable", "ALT STD PACK ID", each ""),
    #"added altw" = Table.AddColumn(#"added altid", "ALT WEIGHT", each ""),
    #"added alt l" = Table.AddColumn(#"added altw", "ALT LENGTH", each ""),
    #"added alt wi" = Table.AddColumn(#"added alt l", "ALT WIDTH", each ""),
    #"added alt h" = Table.AddColumn(#"added alt wi", "ALT HEIGHT", each ""),
    #"added no orders" = Table.AddColumn(#"added alt h", "Nº Ordenes", each ""),
    #"added route" = Table.AddColumn(#"added no orders", "ROUTE", each ""),
    #"aml" = Table.AddColumn(#"added route", "ML", each ""),
    #"ahef" = Table.AddColumn(#"aml", "HEF", each ""),
    #"ahas" = Table.AddColumn(#"ahef", "HAS", each ""),
    #"adhef" = Table.AddColumn(#"ahas", "DHEF", each ""),
    #"adhas" = Table.AddColumn(#"adhef", "DHAS", each ""),
    #"acn" = Table.AddColumn(#"adhas", "CARRIER NAME", each ""),
    #"ac1" = Table.AddColumn(#"acn", "CARRIER CONTACT", each ""),
    #"ac2" = Table.AddColumn(#"ac1", "nom contact transport", each ""),
    #"ac3" = Table.AddColumn(#"ac2", "tel contact transport", each ""),
    #"ac4" = Table.AddColumn(#"ac3", "mail contact transport", each ""),
    #"Renamed Columns4" = Table.RenameColumns(#"ac4",{{"CODE", "COD LIV FRN"}}),
    #"Duplicated Column1" = Table.DuplicateColumn(#"Renamed Columns4", "COD LIV FRN", "COD LIV FRN - Copy"),
    #"Renamed Columns5" = Table.RenameColumns(#"Duplicated Column1",{{"COD LIV FRN - Copy", "COD TRANSPORT"}}),
    #"Reordered Columns5" = Table.ReorderColumns(#"Renamed Columns5",{"REFERENCE", "PART NAME", "SELLER ID", "SHIPPER ID", "SELLER NAME", "COMPLETE SHIPPER ADDRESS", "HYBRID ID", "Incoterm", "TYPE DE PIÈCE", "STD PACK ID", "STD PACK QTY", "WEIGHT", "LENGTH", "WIDTH", "HEIGHT", "VOLUME", "HAZARDOUS", "STACKABLE", "ALT STD PACK ID", "ALT WEIGHT", "ALT LENGTH", "ALT WIDTH", "ALT HEIGHT", "CARRIER ID", "CARRIER NAME", "CARRIER CONTACT", "nom contact transport", "tel contact transport", "mail contact transport", "Cod. CDC", "Desc. CDC", "DHEF", "DHAS", "Nº Ordenes", "ROUTE", "ML", "COD LIV FRN", "COD TRANSPORT", "HEF", "DECALAGE EF", "HAS"}),
    #"Removed Columns4" = Table.RemoveColumns(#"Reordered Columns5",{"Cod. CDC", "Desc. CDC"}),
    #"Removed Duplicates" = Table.Distinct(#"Removed Columns4"),
    #"Split Column by Delimiter2" = Table.SplitColumn(#"Removed Duplicates", "REFERENCE", Splitter.SplitTextByEachDelimiter({"E"}, QuoteStyle.Csv, true), {"REFERENCE.1", "REFERENCE.2"}),
    #"Removed Columns5" = Table.RemoveColumns(#"Split Column by Delimiter2",{"REFERENCE.2"}),
    #"Renamed Columns6" = Table.RenameColumns(#"Removed Columns5",{{"REFERENCE.1", "REFERENCE"}}),
    #"Sorted Rows" = Table.Sort(#"Renamed Columns6",{{"REFERENCE", Order.Ascending}})
in
    #"Sorted Rows"
